data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = My Plot)
plot(cars, main = "My Plot")
plot(cars, subtitle = "My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
?par
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
plot(cars, pch = 2)
data(mtcars)
?boxplot
boxplot(mpg ~ cyl, data = mtcars)
hist(mtacars$mpg)
hist(mtcars$mpg)
q()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
q()
install.packages(dplyr)
library(swirl)
swirl()
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageversion("dplyr")
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
play()
?filter
?arrange
?mutate
?summarize
nxt()
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country;f_arch)
select(cran, country:f_arch)
select(cran, country:r_arch)
cran
select(cran, -time)
select(cran, -x:size)
-5:20
-(5:20)
select(cran, -(x:size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran, ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size -1000)
mutate(cran3, correct_size = size +1000)
avg_bytes <- summarize(cran, avg_bytes = mean(size))
summarize(cran, avg_bytes = mean(size))
q()
library(swirl)
choskins
swirl()
library(dyplyr)
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
play()
?n
?n_distinct
nxt()
submit()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count >679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, count = desc())
?arrange
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
view(top_unique)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
?select
submit()
submit()
submit()
submit()
submit()
q()
q()
library(swirl)
swirl()
myfd <- read.csv(path2csv, stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageversion("dplyr")
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | countyr == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(ip_id, package, size)
cran3 <- select(cran, ip_id, package, size)
crN3
CRn3
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_umique <- filter(pack_sum, unique > 465)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
students3
submit()
submit()
?spread
submit()
submit()
submit()
submit()
library(readr)
parse_number("class5")
?mutate
submit()
submit()
submit()
submit()
skip()
students4
submit()
?unique
submit()
submit()
submit()
submit()
submit()
submit()
submit()
skip()
submit()
submit()
passed
failed
mutate(passed, status = "passed")
passed <- passed %>% mutate(status = "passed")
failed <- failed %?% mutate(status = "failed")
failed <- failed %>% mutate(status = "failed")
bind_rows(passed, failed)
sat
?select
submit()
?separate
submit()
submit()
q()
load("~/coursera/.RData")
rm(sub1)
names(sub)
str(data1)
head(data1[, data1$v1])
head(data1[v1])
head(data1[V1])
head(data1["V1"])
head(data1["v1"])
activity <- colnames(activity) <- "activity"
?colnames
activity <- rbind(testy, trainy)
rm(sub)
?rename
??rename
library(dyplr)
library(dplyr)
test <- rename(data, V1 = Average)
test <- rename(data, V1 = Avg)
colnames(data$V1) <- "Average"
colnames(data)[1] <- "Average"
names(data)
colnames(data)[1] <- "V1"
head(names(data))
test <- colnames(data1)[1:2] <- c("subject", "activity")
head(test)
test <- data1
colnames(test)[1:2] <- c("subject", "activity")
head(test)
head(features)
test <- data
features1 <- select(features, V2)
features2 <- list(features1)
features2
colnames(test) <- features2
names(test)
unlist(features2)
class(features2)
as.vector(features2)
class(features2)
rm(features2)
test1 <- select(test, C(V1:V6, V41:V46, V81:V86, V121:V126, V161:V166, V201:V202, V214:V215, V227:V228, V240:V241, V253:V254, V266:V271, V294:V296, V345:V350, V373:V375, V424:V429, V452:V454, V503:V504, V513, V516:V517, V526, V529, V530, V539, V542, V543, V552))
head(names(test), 1)
test <- data
test1 <- select(test, C(V1:V6, V41:V46, V81:V86, V121:V126, V161:V166, V201:V202, V214:V215, V227:V228, V240:V241, V253:V254, V266:V271, V294:V296, V345:V350, V373:V375, V424:V429, V452:V454, V503:V504, V513, V516:V517, V526, V529, V530, V539, V542, V543, V552))
test1 <- select(test, V1:V6, V41:V46, V81:V86, V121:V126, V161:V166, V201:V202, V214:V215, V227:V228, V240:V241, V253:V254, V266:V271, V294:V296, V345:V350, V373:V375, V424:V429, V452:V454, V503:V504, V513, V516:V517, V526, V529, V530, V539, V542, V543, V552)
head(names(test1), 1)
rm(testsubject)
rm(trainsubject)
rm(testx)
rm(trainx)
rm(testy)
rm(trainy)
rm(test)
head(test1, 1)
data <- test1
rm(test1)
features <- as.character(features[2])
features <- read.table("C://Users/Christina/Documents/coursera/features.txt")
getwd()
features <- read.table("C:/Users/Christina/Documents/coursera/features.txt")
features <- read.table("C:/Users/Christina/Documents/coursera/UCI HAR Dataset/features.txt")
features <- as.character(features[,2])
q()
rm(list = ls())
data <- read.table("C:/Users/Christina/Documents/"averages_data.txt")
data <- read.table("C:/Users/Christina/Documents/averages_data.txt")
View(data)
View(data)
data <- read.table("C:/Users/Christina/Documents/tidy.txt")
View(data)
data <- read.table("C:/Users/Christina/Documents/tidyData.txt")
View(data)
data <- read.table("C:/Users/Christina/Documents/activity_average_data.txt")
View(data)
q()
rm(list = ls())
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(ggplot2)
data(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(ggplot2)
datasets(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(ggplot2)
library(datsets)(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(ggplot2)
library(datsets) data(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(ggplot2)
library(datsets) data(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(ggplot2)
datasets(movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(ggplot2)
data(movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
rm(list = ls())
q()
readin <- read.table("C:/users/Christina/Documents/coursera/household_power_consumption.txt", header = TRUE, stringsAsFactors = FALSE, sep = ";", nrows = 69517, na.string = "?")
data <- readin[readin$Date %in% c("1/2/2007", "2/2/2007"), ]
dayset <- strptime(paste(data$Date, data$Time), "%d/%m/%y %H:%M:%S")
dayset <- strptime(paste(data$Date, data$Time, sep = " "), "%d/%m/%y %H:%M:%S")
dayset <- strptime(paste(data$Date, data$Time, sep = " "), "%d/%m/%Y %H:%M:%S")
dayset <- strptime(paste(data$Date, data$Time), "%d/%m/%Y %H:%M:%S")
head(dayset)
str(data)
str(dayset)
plot(data$Global_active_power, dayset, type = "l")
plot(dayset, data$Global_active_power, type = "l")
plot(dayset, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)")
plot(dayset, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
rm(list = ls())
source('~/coursera/ExData_Plotting1/plot2.R')
setwd("C:/Users/Christina/Documents/coursera/ExData_Plotting`")
setwd("C:/Users/Christina/Documents/coursera/ExData_Plotting1")
plot(dayset, c(data$sub_metering_1, data$sub_metering_2, data_submetering_3), col = c("black", "red", "blue"))
plot(dayset, c(data$sub_metering_1, data$sub_metering_2, data$sub_metering_3), col = c("black", "red", "blue"))
plot(dayset, c(data$sub_metering_1, data$sub_metering_2, data$sub_metering_3), col = c("black", "red", "blue"), type = "l")
plot(dayset, ponts(c(data$sub_metering_1, data$sub_metering_2, data$sub_metering_3), col = c("black", "red", "blue"), type = "l")
plot(dayset, ponts(c(data$sub_metering_1, data$sub_metering_2, data$sub_metering_3), col = c("black", "red", "blue"), type = "l"))
plot(dayset, points(c(data$sub_metering_1, data$sub_metering_2, data$sub_metering_3), col = c("black", "red", "blue"), type = "l"))
plot(dayset, data$sub_metering_1, type = "l")
plot(dayset, data$Sub_metering_1, type = "l")
points(dayset, data$Sub_metering_2, type = "l")
points(dayset, data$Sub_metering_2, type = "l", col = "red")
points(dayset, data$Sub_metering_3, type = "l", col = "blue")
points(dayset, data$Sub_metering_3, type = "l", col = "blue", ylab = "Energy Sub Metering")
points(dayset, data$Sub_metering_3, type = "l", col = "blue")
plot(dayset, data$sub_metering_1, type = "l")
plot(dayset, data$Sub_metering_1, type = "l")
points(dayset, data$Sub_metering_2, type = "l", col = "red")
points(dayset, data$Sub_metering_3, type = "l", col = "blue")
text(ylab = "Energy Sub Metering", xlab = "")
?text
title(xlab = "", ylab = "Energy Sub Metering")
title(xlab = "")
title(xlab = " ")
plot(dayset, data$Sub_metering_1, type = "l")
points(dayset, data$Sub_metering_2, type = "l", col = "red")
points(dayset, data$Sub_metering_3, type = "l", col = "blue")
title(xlab = " ")
plot(dayset, data$Sub_metering_1, type = "l")
title(xlab = "", ylab = "Energy Sub Metering")
plot(dayset, data$Sub_metering_1, type = "l", ylab = "Energy Sub Metering", xlab = " ")
points(dayset, data$Sub_metering_2, type = "l", col = "red")
points(dayset, data$Sub_metering_3, type = "l", col = "blue")
?text
text(x = Sat, y = 30, "Sub_Metering_1")
text(x = "Sat", y = 30, "Sub_Metering_1")
text("Sat", 30, "Sub_Metering_1")
text(Sat, 30, "Sub_Metering_1")
text("Sat", 30, labels = "Sub_Metering_1")
?legend
legend("topright", lengend = c(Sub_Metering_1, Sub_Metering_2, Sub_Metering_3), col = c("black", "red", "blue"))
legend("topright", legend = c(Sub_Metering_1, Sub_Metering_2, Sub_Metering_3), col = c("black", "red", "blue"))
legend("topright", legend = c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"), col = c("black", "red", "blue"))
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"))
legend("topright", legend = c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"), col=c("black", "red", "blue"))
legend("topright", legend = c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"), col = c("black", "red", "blue"))
plot(dayset, data$Sub_metering_1, type = "l", ylab = "Energy sub Metering", xlab = " ")
> points(dayset, data$Sub_metering_2, type = "l", col = "red")
> points(dayset, data$Sub_metering_3, type = "l", col = "blue")
plot(dayset, data$Sub_metering_1, type = "l", ylab = "Energy sub metering", xlab = " ")
> points(dayset, data$Sub_metering_2, type = "l", col = "red")
> points(dayset, data$Sub_metering_3, type = "l", col = "blue")
plot(dayset, data$Sub_metering_1, type = "l", ylab = "Energy Sub Metering", xlab = " ")
> points(dayset, data$Sub_metering_2, type = "l", col = "red")
> points(dayset, data$Sub_metering_3, type = "l", col = "blue")
plot(dayset, data$Sub_metering_1, type = "l", ylab = "Energy Sub Metering", xlab = " ")
points(dayset, data$Sub_metering_2, type = "l", col = "red")
points(dayset, data$Sub_metering_3, type = "l", col = "blue")
legend("topright", legend = c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"), col = c("black", "red", "blue"))
?legend
legend("topright", legend = c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"), lty = "solid", lwd = 2, col = c("black", "red", "blue"))
legend("topright", legend = c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"), lty = "solid", col = c("black", "red", "blue"))
?legend
legend("topright", legend = c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"), lty = 1, col = c("black", "red", "blue"))
legend("topright", legend = c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"), lty = 1, lwd = 2, col = c("black", "red", "blue"))
legend("topright", legend = c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"), lty = 1, col = c("black", "red", "blue"))
rm(list = ls())
source('~/coursera/ExData_Plotting1/plot3.R')
par(font)
par("font")
rm(list = ls())
source('~/coursera/ExData_Plotting1/plot3.R')
rm(list = ls())
par(mfrow = c(2,2))
plot(dayset, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
readin <- read.table("C:/users/Christina/Documents/coursera/household_power_consumption.txt", header = TRUE,
stringsAsFactors = FALSE, sep = ";", nrows = 69517, na.string = "?")
data <- readin[readin$Date %in% c("1/2/2007", "2/2/2007"), ]
dayset <- strptime(paste(data$Date, data$Time), "%d/%m/%Y %H:%M:%S")
par(mfrow = c(2,2))
plot(dayset, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
plot(dayset, data$Voltage, xlab = "datatime", ylab = "Voltage")
plot(dayset, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
par(mfrow = c(2,2))
plot(dayset, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
plot(dayset, data$Voltage, xlab = "datatime", ylab = "Voltage", type = "l")
par(mfrow = c(2,2))
plot(dayset, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
plot(dayset, data$Voltage, xlab = "datetime", ylab = "Voltage", type = "l")
plot(dayset, data$Sub_metering_1, type = "l", xlab = " ", ylab = "Energy sub metering")
points(dayset, data$Sub_metering_2, type = "l", col = "red")
points(dayset, data$Sub_metering_3, type = "l", col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1,
col = c("black", "red", "blue"))
plot(dayset, data$Global_reactive_power, xlab = "datetime", ylab = "Global_reactive_power", type = "l")
rm(list = ls())
source('~/coursera/ExData_Plotting1/plot4.R')
?legend
rm(list = ls())
source('~/coursera/ExData_Plotting1/plot4.R')
rm(list = ls())
source('~/coursera/ExData_Plotting1/plot4.R')
rm(list = ls())
source('~/coursera/ExData_Plotting1/plot4.R')
rm(list = ls())
source('~/coursera/ExData_Plotting1/plot4.R')
rm(list = ls())
source('~/coursera/ExData_Plotting1/plot4.R')
q()
